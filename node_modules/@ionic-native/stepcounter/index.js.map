{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/stepcounter/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCvC,+BAAiB;;;;IAEhD;;;;;OAKG;;;;;;;IAEH,2BAAK;;;;;;cAAC,cAAsB,IAA2B,MAAM,CAAC,EAAE;IAEhE;;;OAGG;;;;;IAEH,0BAAI;;;;kBAA4B,MAAM,CAAC,EAAE;IAEzC;;;OAGG;;;;;IAEH,uCAAiB;;;;kBAA4B,MAAM,CAAC,EAAE;IAEtD;;;OAGG;;;;;IAEH,kCAAY;;;;kBAA4B,MAAM,CAAC,EAAE;IAEjD;;;OAGG;;;;;IAEH,yCAAmB;;;;kBAA6B,MAAM,CAAC,EAAE;IAEzD;;;OAGG;;;;;IAEH,gCAAU;;;;kBAAmB,MAAM,CAAC,EAAE;;gBA7CvC,UAAU;;;QASR,OAAO,EAAE;;;;4CACsD;;QAM/D,OAAO,EAAE;;;;2CAC+B;;QAMxC,OAAO,EAAE;;;;wDAC4C;;QAMrD,OAAO,EAAE;;;;mDACuC;;QAMhD,OAAO,EAAE;;;;0DAC+C;;QAMxD,OAAO,EAAE;;;;iDAC4B;;;;;;;;;;;;;;;;;;;;;;;;;IA5C3B,WAAW;QARvB,MAAM,CAAC;YACN,UAAU,EAAE,aAAa;YACzB,MAAM,EAAE,4BAA4B;YACpC,SAAS,EAAE,aAAa;YACxB,IAAI,EAAE,uDAAuD;YAC7D,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,WAAW,EA6CvB;sBA/ED;EAkCiC,iBAAiB;SAArC,WAAW","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Stepcounter\n * @description\n * Cordova plugin for using device's stepcounter on Android (API > 19)\n *\n * Use to\n * - start and stop stepcounter service\n * - read device's stepcounter data\n *\n * @usage\n * ```typescript\n * import { Stepcounter } from '@ionic-native/stepcounter';\n *\n * constructor(private stepcounter: Stepcounter) { }\n *\n * ...\n *\n * let startingOffset = 0;\n * this.stepcounter.start(startingOffset).then(onSuccess => console.log('stepcounter-start success', onSuccess), onFailure => console.log('stepcounter-start error', onFailure));\n *\n * this.stepcounter.getHistory().then(historyObj => console.log('stepcounter-history success', historyObj), onFailure => console.log('stepcounter-history error', onFailure));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'Stepcounter',\n  plugin: 'cordova-plugin-stepcounter',\n  pluginRef: 'stepcounter',\n  repo: 'https://github.com/ihadeed/cordova-plugin-stepcounter',\n  platforms: ['Android']\n})\n@Injectable()\nexport class Stepcounter extends IonicNativePlugin {\n\n  /**\n   * Start the step counter\n   *\n   * @param startingOffset {number} will be added to the total steps counted in this session\n   * @returns {Promise<any | number>} Returns a Promise that resolves on success or rejects on failure\n   */\n  @Cordova()\n  start(startingOffset: number): Promise<number | any> { return; }\n\n  /**\n   * Stop the step counter\n   * @returns {Promise<any | number>} Returns a Promise that resolves on success with the amount of steps since the start command has been called, or rejects on failure\n   */\n  @Cordova()\n  stop(): Promise<number | any> { return; }\n\n  /**\n   * Get the amount of steps for today (or -1 if it no data given)\n   * @returns {Promise<any | number>} Returns a Promise that resolves on success with the amount of steps today, or rejects on failure\n   */\n  @Cordova()\n  getTodayStepCount(): Promise<number | any> { return; }\n\n  /**\n   * Get the amount of steps since the start command has been called\n   * @returns {Promise<any | number>} Returns a Promise that resolves on success with the amount of steps since the start command has been called, or rejects on failure\n   */\n  @Cordova()\n  getStepCount(): Promise<number | any> { return; }\n\n  /**\n   * Returns true/false if Android device is running >API level 19 && has the step counter API available\n   * @returns {Promise<any | boolean>} Returns a Promise that resolves on success, or rejects on failure\n   */\n  @Cordova()\n  deviceCanCountSteps(): Promise<boolean | any> { return; }\n\n  /**\n   * Get the step history (JavaScript object)\n   * @returns {Promise<any>} Returns a Promise that resolves on success, or rejects on failure\n   */\n  @Cordova()\n  getHistory(): Promise<any> { return; }\n}\n"]}